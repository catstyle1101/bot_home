name: Home Bot Deploy
on:
  push:
    branches:
      - master
jobs:
  copy_compose_on_server:
    name: Copy docker compose to server
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: create app folder
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USER}}
        key: ${{ secrets.SSH_KEY }}
        script: sudo rm -rf /home/${{ secrets.HOST_USER }}/bot && mkdir -p /home/${{ secrets.HOST_USER }}/bot

    - name: Copy compose file
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.HOST_USER}}
        key: ${{ secrets.SSH_KEY }}
        source: "docker-compose.yml"
        target: /home/${{ secrets.HOST_USER }}/bot/
  build_and_push_bot_to_DockerHub:
      name: Push bot image and pushing it to DockerHub
      runs-on: ubuntu-latest
      needs: copy_compose_on_server
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
        - name: Login to Docker
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2
          with:
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.BOT_CONTAINER_NAME}}
            platforms: linux/amd64,linux/arm64
            context: .
  deploy:
    runs-on: ubuntu-latest
    needs:
      - copy_compose_on_server
      - build_and_push_bot_to_DockerHub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/${{ secrets.HOST_USER }}/bot
            touch .env
            echo BOT_TOKEN=${{ secrets.TELEGRAM_TOKEN_MANHATTAN }} >> .env
            echo ADMINS=${{ secrets.ADMINS }} >> .env
            echo DOMAIN=${{ secrets.DOMAIN }} >> .env
            echo NGROK_TOKEN=${{ secrets.NGROK_TOKEN }} >> .env
            echo WEBHOOK_SECRET=${{ secrets.WEBHOOK_SECRET }} >> .env
            echo TRANSMISSION_LOGIN=${{ secrets.TRANSMISSION_LOGIN }} >> .env
            echo TRANSMISSION_PASSWORD=${{ secrets.TRANSMISSION_PASSWORD }} >> .env
            echo TRANSMISSION_HOST=${{ secrets.TRANSMISSION_HOST }} >> .env
            echo DOCKERHUB_USER=${{ secrets.DOCKER_USERNAME }} >> .env
            echo BOT_CONTAINER_NAME=${{ secrets.BOT_CONTAINER_NAME }} >> .env
            sudo docker compose down
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.BOT_CONTAINER_NAME }}
            sudo docker compose up -d
            sudo docker image prune -f
